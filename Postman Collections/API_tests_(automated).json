{
	"info": {
		"_postman_id": "beb90f96-15c3-468b-9976-e8cb307c653e",
		"name": "TEST",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "REGISTER",
			"item": [
				{
					"name": "Register with email and password",
					"item": [
						{
							"name": "Positive / Register with email, password and name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cfc59d9b-cb46-4ada-96e5-95cb296dbf36",
										"exec": [
											"//verify response code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"//verify body contains all fields",
											"pm.test(\"Verification new user Stats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.stats).to.eql({",
											"            \"dailySessions\": 0,",
											"            \"longestStreak\": 0,",
											"            \"weekendStreak\": 0,",
											"            \"prayTime\": 0,",
											"            \"musicTime\": 0,",
											"            \"mindTime\": 0,",
											"            \"fellowshipCount\": 0,",
											"            \"totalDailySessions\": 0",
											"        });",
											"        ",
											"});",
											"",
											"pm.test(\"Verification email conformation\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.emailConfirmation.confirmed).to.eql(false);",
											"});",
											"",
											"pm.test(\"Verification that user created with id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user._id).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"Verification gamification stats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.gamification).to.eql({",
											"            \"candles\": 0,",
											"            \"isActive\": false,",
											"            \"hasUnclaimedReferralGift\": false",
											"        });",
											"});",
											"",
											"pm.test(\"Verification notification default settings\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.notificationSettings).to.eql({",
											"            \"prayerRequests\": true,",
											"            \"prayerUpdates\": true,",
											"            \"prayerResponses\": true,",
											"            \"fellowshipRequests\": true",
											"        });",
											"});",
											"",
											"pm.test(\"Verification that user created email\", function () {",
											"    var jsonData = pm.response.json();",
											"    const email = pm.environment.get(\"new_account_email\");",
											"    pm.expect(jsonData.user.email).to.eql(email);",
											"});",
											"",
											"pm.test(\"Verification that user created with nickname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.nickname).to.eql(\"Olga's test\");",
											"});",
											"",
											"pm.test(\"Verification user Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.status).to.eql(\"active\");",
											"});",
											"",
											"pm.test(\"Verification push notification setting\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.pushNotifications).to.eql(true);",
											"});",
											"//work",
											"pm.test(\"Verification email Notification setting\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.emailNotifications).to.eql(true);",
											"});",
											"",
											"//discuss which survey",
											"pm.test(\"Verification that user had seen survey\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.didSeeSurvey).to.eql(false);",
											"});",
											"",
											"pm.test(\"Verification Role/subscription\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.role).to.eql(\"basic\");",
											"});",
											"",
											"pm.test(\"Verification if user has subscription\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.hasSubscription).to.eql(false);",
											"});",
											"",
											"pm.test(\"Verification that user got token\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.authToken).to.not.be.empty",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "02942f76-e7c5-48e7-8fe7-5cb0643c238c",
										"exec": [
											"var local = Date.now()",
											"var uniqueEmail= `${local}olga@test.com`",
											"pm.environment.set(\"new_account_email\", uniqueEmail);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a33e76fd-286d-4e53-8022-9f40ac137c8c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "ios 13.0 glorify/{{iOS_App_Version}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{new_account_email}}\",\n\t\"password\": \"{{Password}}\",\n\t\"nickname\": \"Olga's test\"\n}\n"
								},
								"url": "{{BASE_URL}}api/v1/users/register"
							},
							"response": []
						},
						{
							"name": "Negative / Register with used email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cfc59d9b-cb46-4ada-96e5-95cb296dbf36",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Verify the error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error.msg).to.eql(\"The email address you have entered is already registered. Please Sign In.\");",
											"});",
											"",
											"pm.test(\"Verify the error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error.code).to.eql(\"EmailAlreadyExists\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "02942f76-e7c5-48e7-8fe7-5cb0643c238c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "19ac320b-556b-4ed7-b8a1-adb0d27ecb8a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "ios 13.0 glorify/{{iOS_App_Version}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"o@dev.com\",\n\t\"password\": \"{{Password}}\",\n\t\"nickname\": \"Olga's test\"\n}\n"
								},
								"url": "{{BASE_URL}}api/v1/users/register"
							},
							"response": []
						},
						{
							"name": "Negative / Register with short password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cfc59d9b-cb46-4ada-96e5-95cb296dbf36",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify the error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error.msg).to.eql(\"Your password must contain at least 6 characters.\");",
											"});",
											"",
											"pm.test(\"Verify the error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error.code).to.eql(\"InvalidPassword\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "02942f76-e7c5-48e7-8fe7-5cb0643c238c",
										"exec": [
											"var local = Date.now()",
											"var uniqueEmail= `${local}olga@test.com`",
											"pm.environment.set(\"new_account_email\", uniqueEmail);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fcb87c46-4903-4734-b325-7d76883a9fd5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "ios 13.0 glorify/{{iOS_App_Version}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{new_account_email}}\",\n\t\"password\": \"12345\",\n\t\"nickname\": \"Olga's test\"\n}\n"
								},
								"url": "{{BASE_URL}}api/v1/users/register"
							},
							"response": []
						},
						{
							"name": "Negative / Register with blank spaces instead of password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cfc59d9b-cb46-4ada-96e5-95cb296dbf36",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Verify the error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error.msg).to.eql(\"Your password can't contain spaces\");",
											"});",
											"",
											"pm.test(\"Verify the error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error.code).to.eql(\"InvalidPassword\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "02942f76-e7c5-48e7-8fe7-5cb0643c238c",
										"exec": [
											"var local = Date.now()",
											"var uniqueEmail= `${local}olga@test.com`",
											"pm.environment.set(\"new_account_email\", uniqueEmail);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "af7cbd33-5428-46a2-99df-9595880b1282",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "ios 13.0 glorify/{{iOS_App_Version}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{new_account_email}}\",\n\t\"password\": \"       \",\n\t\"nickname\": \"Olga's test\"\n}\n"
								},
								"url": "{{BASE_URL}}api/v1/users/register"
							},
							"response": []
						},
						{
							"name": "Negative / Register with password special charackters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cfc59d9b-cb46-4ada-96e5-95cb296dbf36",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "02942f76-e7c5-48e7-8fe7-5cb0643c238c",
										"exec": [
											"var local = Date.now()",
											"var uniqueEmail= `${local}olga@test.com`",
											"pm.environment.set(\"new_account_email\", uniqueEmail);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "32f1a314-9f2f-417f-8adf-39e8ca8a6b46",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "ios 13.0 glorify/{{iOS_App_Version}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{new_account_email}}\",\n\t\"password\": \"!@#$%^&*()_+\",\n\t\"nickname\": \"Olga's test\"\n}\n"
								},
								"url": "{{BASE_URL}}api/v1/users/register"
							},
							"response": []
						}
					],
					"id": "7bc8707f-0998-4558-aefd-eaca8a71da35"
				}
			],
			"id": "85ba7b99-eece-4b93-ac74-afa8b3f65f9e"
		},
		{
			"name": "LOGIN",
			"item": [
				{
					"name": "Login with enmail and password",
					"item": [
						{
							"name": "Positive login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e79a82f5-fb5e-4862-a011-ac176affce95",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"//Verify user got authentication token",
											"pm.test(\"Verify the error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.authToken).to.not.be.empty",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8b3c64f3-59f9-4fb5-9e33-15011536bc69",
										"exec": [
											"// JWT generation script adapted from",
											"// https://gist.github.com/corbanb/db03150abbe899285d6a86cc480f674d",
											"",
											"var jwtSecret = pm.globals.get('jwt_hash') || ''",
											"",
											"// Set headers for JWT",
											"var header = {",
											"\t'typ': 'JWT',",
											"\t'alg': 'HS256'",
											"};",
											"",
											"// Prepare timestamp in seconds",
											"var currentTimestamp = Math.floor(Date.now() / 1000)",
											"",
											"var data = {",
											"\t'path': \"/\" + pm.request.url.toString().slice(12),",
											"\t'exp': currentTimestamp + 180, // expiry time is 30 seconds from time of creation",
											"}",
											"",
											"",
											"function base64url(source) {",
											"    // Encode in classical base64",
											"    encodedSource = CryptoJS.enc.Base64.stringify(source)",
											"    ",
											"    // Remove padding equal characters",
											"    encodedSource = encodedSource.replace(/=+$/, '')",
											"    ",
											"    // Replace characters according to base64url specifications",
											"    encodedSource = encodedSource.replace(/\\+/g, '-')",
											"    encodedSource = encodedSource.replace(/\\//g, '_')",
											"    ",
											"    return encodedSource",
											"}",
											"",
											"// encode header",
											"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header))",
											"var encodedHeader = base64url(stringifiedHeader)",
											"",
											"// encode data",
											"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data))",
											"var encodedData = base64url(stringifiedData)",
											"",
											"// build token",
											"var token = `${encodedHeader}.${encodedData}`",
											"",
											"// sign token",
											"var signature = CryptoJS.HmacSHA256(token, jwtSecret)",
											"signature = base64url(signature)",
											"var signedToken = `${token}.${signature}`",
											"",
											"pm.environment.set('hash', signedToken)",
											"pm.request.headers.add(signedToken, 'hash')",
											"console.log('Signed and encoded JWT', signedToken)",
											"console.log('Data: \\n', data)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5ad8bb68-30db-4b3e-8b84-080bb2f97e2c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "android 13 glorify/2.42.0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"o@dev.com\",\n    \"password\": \"{{userPassword}}\"\n}\n"
								},
								"url": "{{BASE_URL}}/api/v2/users/login"
							},
							"response": []
						},
						{
							"name": "Negative / Login w wrong password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e79a82f5-fb5e-4862-a011-ac176affce95",
										"exec": [
											"//Verify incorrect password responce body is correct",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error).to.eql({",
											"        \"code\": \"IncorrectEmailOrPassword\",",
											"        \"status\": 422,",
											"        \"msg\": \"The email or password you have entered is incorrect. Please try again.\"",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8b3c64f3-59f9-4fb5-9e33-15011536bc69",
										"exec": [
											"// JWT generation script adapted from",
											"// https://gist.github.com/corbanb/db03150abbe899285d6a86cc480f674d",
											"",
											"var jwtSecret = pm.globals.get('jwt_hash') || ''",
											"",
											"// Set headers for JWT",
											"var header = {",
											"\t'typ': 'JWT',",
											"\t'alg': 'HS256'",
											"};",
											"",
											"// Prepare timestamp in seconds",
											"var currentTimestamp = Math.floor(Date.now() / 1000)",
											"",
											"var data = {",
											"\t'path': \"/\" + pm.request.url.toString().slice(12),",
											"\t'exp': currentTimestamp + 180, // expiry time is 30 seconds from time of creation",
											"}",
											"",
											"",
											"function base64url(source) {",
											"    // Encode in classical base64",
											"    encodedSource = CryptoJS.enc.Base64.stringify(source)",
											"    ",
											"    // Remove padding equal characters",
											"    encodedSource = encodedSource.replace(/=+$/, '')",
											"    ",
											"    // Replace characters according to base64url specifications",
											"    encodedSource = encodedSource.replace(/\\+/g, '-')",
											"    encodedSource = encodedSource.replace(/\\//g, '_')",
											"    ",
											"    return encodedSource",
											"}",
											"",
											"// encode header",
											"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header))",
											"var encodedHeader = base64url(stringifiedHeader)",
											"",
											"// encode data",
											"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data))",
											"var encodedData = base64url(stringifiedData)",
											"",
											"// build token",
											"var token = `${encodedHeader}.${encodedData}`",
											"",
											"// sign token",
											"var signature = CryptoJS.HmacSHA256(token, jwtSecret)",
											"signature = base64url(signature)",
											"var signedToken = `${token}.${signature}`",
											"",
											"pm.environment.set('hash', signedToken)",
											"pm.request.headers.add(signedToken, 'hash')",
											"console.log('Signed and encoded JWT', signedToken)",
											"console.log('Data: \\n', data)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "50343450-7db6-4d3a-98a9-a400c88fc7ca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "android 13 glorify/2.42.0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"o@dev.com\",\n    \"password\": \"Green1111\"\n}\n"
								},
								"url": "{{BASE_URL}}/api/v2/users/login"
							},
							"response": []
						},
						{
							"name": "Negative / Login w empty password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e79a82f5-fb5e-4862-a011-ac176affce95",
										"exec": [
											"//Verify incorrect password responce body is correct",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error).to.eql({",
											"        \"code\": \"PasswordIsRequired\",",
											"        \"status\": 422,",
											"        \"msg\": \"A password is required.\"",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8b3c64f3-59f9-4fb5-9e33-15011536bc69",
										"exec": [
											"// JWT generation script adapted from",
											"// https://gist.github.com/corbanb/db03150abbe899285d6a86cc480f674d",
											"",
											"var jwtSecret = pm.globals.get('jwt_hash') || ''",
											"",
											"// Set headers for JWT",
											"var header = {",
											"\t'typ': 'JWT',",
											"\t'alg': 'HS256'",
											"};",
											"",
											"// Prepare timestamp in seconds",
											"var currentTimestamp = Math.floor(Date.now() / 1000)",
											"",
											"var data = {",
											"\t'path': \"/\" + pm.request.url.toString().slice(12),",
											"\t'exp': currentTimestamp + 180, // expiry time is 30 seconds from time of creation",
											"}",
											"",
											"",
											"function base64url(source) {",
											"    // Encode in classical base64",
											"    encodedSource = CryptoJS.enc.Base64.stringify(source)",
											"    ",
											"    // Remove padding equal characters",
											"    encodedSource = encodedSource.replace(/=+$/, '')",
											"    ",
											"    // Replace characters according to base64url specifications",
											"    encodedSource = encodedSource.replace(/\\+/g, '-')",
											"    encodedSource = encodedSource.replace(/\\//g, '_')",
											"    ",
											"    return encodedSource",
											"}",
											"",
											"// encode header",
											"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header))",
											"var encodedHeader = base64url(stringifiedHeader)",
											"",
											"// encode data",
											"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data))",
											"var encodedData = base64url(stringifiedData)",
											"",
											"// build token",
											"var token = `${encodedHeader}.${encodedData}`",
											"",
											"// sign token",
											"var signature = CryptoJS.HmacSHA256(token, jwtSecret)",
											"signature = base64url(signature)",
											"var signedToken = `${token}.${signature}`",
											"",
											"pm.environment.set('hash', signedToken)",
											"pm.request.headers.add(signedToken, 'hash')",
											"console.log('Signed and encoded JWT', signedToken)",
											"console.log('Data: \\n', data)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b386a666-fdb8-4072-a231-032fb283168e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "android 13 glorify/2.42.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"o@dev.com\",\n    \"password\": \"\"\n}\n"
								},
								"url": "{{BASE_URL}}/api/v2/users/login"
							},
							"response": []
						},
						{
							"name": "Negative / Login w empty Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e79a82f5-fb5e-4862-a011-ac176affce95",
										"exec": [
											"//Verify incorrect password responce body is correct",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error).to.eql({",
											"        \"code\": \"EmailIsRequired\",",
											"        \"status\": 422,",
											"        \"msg\": \"Your email is required.\"",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8b3c64f3-59f9-4fb5-9e33-15011536bc69",
										"exec": [
											"// JWT generation script adapted from",
											"// https://gist.github.com/corbanb/db03150abbe899285d6a86cc480f674d",
											"",
											"var jwtSecret = pm.globals.get('jwt_hash') || ''",
											"",
											"// Set headers for JWT",
											"var header = {",
											"\t'typ': 'JWT',",
											"\t'alg': 'HS256'",
											"};",
											"",
											"// Prepare timestamp in seconds",
											"var currentTimestamp = Math.floor(Date.now() / 1000)",
											"",
											"var data = {",
											"\t'path': \"/\" + pm.request.url.toString().slice(12),",
											"\t'exp': currentTimestamp + 180, // expiry time is 30 seconds from time of creation",
											"}",
											"",
											"",
											"function base64url(source) {",
											"    // Encode in classical base64",
											"    encodedSource = CryptoJS.enc.Base64.stringify(source)",
											"    ",
											"    // Remove padding equal characters",
											"    encodedSource = encodedSource.replace(/=+$/, '')",
											"    ",
											"    // Replace characters according to base64url specifications",
											"    encodedSource = encodedSource.replace(/\\+/g, '-')",
											"    encodedSource = encodedSource.replace(/\\//g, '_')",
											"    ",
											"    return encodedSource",
											"}",
											"",
											"// encode header",
											"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header))",
											"var encodedHeader = base64url(stringifiedHeader)",
											"",
											"// encode data",
											"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data))",
											"var encodedData = base64url(stringifiedData)",
											"",
											"// build token",
											"var token = `${encodedHeader}.${encodedData}`",
											"",
											"// sign token",
											"var signature = CryptoJS.HmacSHA256(token, jwtSecret)",
											"signature = base64url(signature)",
											"var signedToken = `${token}.${signature}`",
											"",
											"pm.environment.set('hash', signedToken)",
											"pm.request.headers.add(signedToken, 'hash')",
											"console.log('Signed and encoded JWT', signedToken)",
											"console.log('Data: \\n', data)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fea79459-950b-4f71-a380-f03f9a09fe2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "android 13 glorify/2.42.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"\",\n    \"password\": \"{{Account_Password}}\"\n}\n"
								},
								"url": "{{BASE_URL}}/api/v2/users/login"
							},
							"response": []
						},
						{
							"name": "Negative / Login w wrong Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e79a82f5-fb5e-4862-a011-ac176affce95",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"//Verify incorrect password responce body is correct",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.error).to.eql({",
											"        \"code\": \"IncorrectEmailOrPassword\",",
											"        \"status\": 422,",
											"        \"msg\": \"The email or password you have entered is incorrect. Please try again.\"",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8b3c64f3-59f9-4fb5-9e33-15011536bc69",
										"exec": [
											"// JWT generation script adapted from",
											"// https://gist.github.com/corbanb/db03150abbe899285d6a86cc480f674d",
											"",
											"var jwtSecret = pm.globals.get('jwt_hash') || ''",
											"",
											"// Set headers for JWT",
											"var header = {",
											"\t'typ': 'JWT',",
											"\t'alg': 'HS256'",
											"};",
											"",
											"// Prepare timestamp in seconds",
											"var currentTimestamp = Math.floor(Date.now() / 1000)",
											"",
											"var data = {",
											"\t'path': \"/\" + pm.request.url.toString().slice(12),",
											"\t'exp': currentTimestamp + 180, // expiry time is 30 seconds from time of creation",
											"}",
											"",
											"",
											"function base64url(source) {",
											"    // Encode in classical base64",
											"    encodedSource = CryptoJS.enc.Base64.stringify(source)",
											"    ",
											"    // Remove padding equal characters",
											"    encodedSource = encodedSource.replace(/=+$/, '')",
											"    ",
											"    // Replace characters according to base64url specifications",
											"    encodedSource = encodedSource.replace(/\\+/g, '-')",
											"    encodedSource = encodedSource.replace(/\\//g, '_')",
											"    ",
											"    return encodedSource",
											"}",
											"",
											"// encode header",
											"var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header))",
											"var encodedHeader = base64url(stringifiedHeader)",
											"",
											"// encode data",
											"var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data))",
											"var encodedData = base64url(stringifiedData)",
											"",
											"// build token",
											"var token = `${encodedHeader}.${encodedData}`",
											"",
											"// sign token",
											"var signature = CryptoJS.HmacSHA256(token, jwtSecret)",
											"signature = base64url(signature)",
											"var signedToken = `${token}.${signature}`",
											"",
											"pm.environment.set('hash', signedToken)",
											"pm.request.headers.add(signedToken, 'hash')",
											"console.log('Signed and encoded JWT', signedToken)",
											"console.log('Data: \\n', data)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3a266aeb-c8a1-47fa-a322-dcf499b9f0ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "App-Agent",
										"value": "android 13 glorify/2.42.0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"nonexistingEmail@dev.com\",\n    \"password\": \"Green1111!\"\n}\n"
								},
								"url": "{{BASE_URL}}/api/v2/users/login"
							},
							"response": []
						}
					],
					"id": "67e4cbce-08b8-444c-8821-beca9898ab4d"
				}
			],
			"id": "69e6aada-afc4-4aed-a821-2840668b6d8b"
		},
		{
			"name": "Android Happy Path/ EN users",
			"item": [
				{
					"name": "Register with email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfc59d9b-cb46-4ada-96e5-95cb296dbf36",
								"exec": [
									"//verify response code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"//verify body contains all fields",
									"pm.test(\"Verification new user Stats\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.stats).to.eql({",
									"            \"dailySessions\": 0,",
									"            \"longestStreak\": 0,",
									"            \"weekendStreak\": 0,",
									"            \"prayTime\": 0,",
									"            \"musicTime\": 0,",
									"            \"mindTime\": 0,",
									"            \"fellowshipCount\": 0,",
									"            \"totalDailySessions\": 0",
									"        });",
									"        ",
									"});",
									"",
									"pm.test(\"Verification email conformation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.emailConfirmation.confirmed).to.eql(false);",
									"});",
									"",
									"pm.test(\"Verification that user created with id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user._id).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"Verification gamification stats\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.gamification).to.eql({",
									"            \"candles\": 0,",
									"            \"isActive\": false,",
									"            \"hasUnclaimedReferralGift\": false",
									"        });",
									"});",
									"",
									"pm.test(\"Verification notification default settings\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.notificationSettings).to.eql({",
									"            \"prayerRequests\": true,",
									"            \"prayerUpdates\": true,",
									"            \"prayerResponses\": true,",
									"            \"fellowshipRequests\": true",
									"        });",
									"});",
									"",
									"pm.test(\"Verification that user created email\", function () {",
									"    var jsonData = pm.response.json();",
									"    const email = pm.environment.get(\"new_account_email\");",
									"    pm.expect(jsonData.user.email).to.eql(email);",
									"});",
									"",
									"pm.test(\"Verification that user created with nickname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.nickname).to.eql(\"Olga's test\");",
									"});",
									"",
									"pm.test(\"Verification user Status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.status).to.eql(\"active\");",
									"});",
									"",
									"pm.test(\"Verification push notification setting\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.pushNotifications).to.eql(true);",
									"});",
									"//work",
									"pm.test(\"Verification email Notification setting\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.emailNotifications).to.eql(true);",
									"});",
									"",
									"//discuss which survey",
									"pm.test(\"Verification that user had seen survey\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.didSeeSurvey).to.eql(false);",
									"});",
									"",
									"pm.test(\"Verification Role/subscription\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.role).to.eql(\"basic\");",
									"});",
									"",
									"pm.test(\"Verification if user has subscription\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.hasSubscription).to.eql(false);",
									"});",
									"",
									"pm.test(\"Verification that user got token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.authToken).to.not.be.empty",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var current_user_id= jsonData.user._id",
									"console.log(current_user_id)",
									"pm.environment.set(\"current_user_id\", current_user_id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "02942f76-e7c5-48e7-8fe7-5cb0643c238c",
								"exec": [
									"var local = Date.now()",
									"var uniqueEmail= `${local}olga@test.com`",
									"pm.environment.set(\"new_account_email\", uniqueEmail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "223ff089-d2dd-4808-8f85-664f22383ab8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "App-Agent",
								"value": "ios 13.0 glorify/{{iOS_App_Version}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{new_account_email}}\",\n\t\"password\": \"{{Password}}\",\n\t\"nickname\": \"Olga's test\",\n    \"localDate\": \"2023-11-01T13:26:54.28Z\",\n\t\"appstoreLocation\": \"USA\"\n}\n"
						},
						"url": "{{BASE_URL}}api/v1/users/register"
					},
					"response": []
				},
				{
					"name": "Personalization",
					"id": "88ffe684-e9ed-46f6-a6e8-89180edbe7d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi9wZXJzb25hbGlzYXRpb24vc3VydmV5L29uYm9hcmRpbmciLCJleHAiOjE2OTg4NzA1OTd9.U_0DgT0R5Sj_LgpuxbyT-ockt39l7ZdkOKOzZjhnlhU"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": "https://api.dev.glorify-app.com/api/v2/personalisation/survey/onboarding"
					},
					"response": []
				},
				{
					"name": "Personalization survey choise",
					"id": "52813666-97a7-41d9-92ab-d8877c9afa7b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi9wZXJzb25hbGlzYXRpb24vc3VydmV5IiwiZXhwIjoxNjk4ODcwNjI1fQ.YqaOrxGEBlzEORBxYc5Opfn07NcXXnp_kabgNkVUAnQ"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"surveyId\":\"64d54363e28317f262df5d96\",\"questions\":[{\"_id\":\"64d54361e28317f262df5d8b\",\"answers\":[{\"_id\":\"64d54361e28317f262df5d8d\",\"text\":\"My relationship with God is mainly personal & private\"}]},{\"_id\":\"64d54361e28317f262df5d8f\",\"answers\":[{\"_id\":\"64d54361e28317f262df5d92\",\"text\":\"Not familiar but familiar to Christianity\"}]}]}"
						},
						"url": "https://api.dev.glorify-app.com/api/v2/personalisation/survey"
					},
					"response": []
				},
				{
					"name": "User stats/ amount of completed DailyWorship",
					"id": "2b35e351-d744-4c17-881d-ffa831d9cb7b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi9jYW5kbGVzL3N0YXRzL2RhaWx5V29yc2hpcCIsImV4cCI6MTY5ODg3MDY0OH0.hTDH6xLqRasd6bA0b3w2TVQqd2PgolQHxuUQKivUioc"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": "https://api.dev.glorify-app.com/api/v2/candles/stats/dailyWorship"
					},
					"response": []
				},
				{
					"name": "Verification if user is reffered",
					"id": "c94c5318-88da-4e26-96e1-5b379b5a1e9a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi9jYW5kbGVzL3N0YXRzL3JlZmVycmFsIiwiZXhwIjoxNjk4ODcwNjUwfQ.5SV4NNUUmkBdfhObGUG8h6kRVupBfY3bXinuOt-faRA"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": "https://api.dev.glorify-app.com/api/v2/candles/stats/referral"
					},
					"response": []
				},
				{
					"name": "Candles config",
					"id": "c045a3a0-98da-4b38-9d2a-6429f9c1d8c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi9jYW5kbGVzL2NvbmZpZyIsImV4cCI6MTY5ODg3MDYzN30.AlIp8kFOJnE5KF-IipLP_huqgYgGEyodlvp-ieDGBbA"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": "https://api.dev.glorify-app.com/api/v2/candles/config"
					},
					"response": []
				},
				{
					"name": "Challenge overlay",
					"id": "4b82f70d-0894-485f-b3d2-73fe1cf1b996",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi9jaGFsbGVuZ2VzL292ZXJsYXkiLCJleHAiOjE2OTg4NzA2NDh9.OMV_9_X6FVvzv_jlVBPxSMVFcnmVBI1i4KgspUDtcSQ"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": {
							"raw": "https://api.dev.glorify-app.com/api/v2/challenges/overlay?localDate=2023-11-01",
							"protocol": "https",
							"host": [
								"api",
								"dev",
								"glorify-app",
								"com"
							],
							"path": [
								"api",
								"v2",
								"challenges",
								"overlay"
							],
							"query": [
								{
									"key": "localDate",
									"value": "2023-11-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Count of notification (not sure what it is)",
					"id": "d0284e73-65d4-4fec-af7b-10819c45dfed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi9ub3RpZmljYXRpb25zL2NvdW50IiwiZXhwIjoxNjk4ODcwNjQ5fQ.upxHM-BuS_iS8Ec2B_yhD3ggN2YwBNpi4EkJpCVSrZ4"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": "https://api.dev.glorify-app.com/api/v2/notifications/count"
					},
					"response": []
				},
				{
					"name": "is session completed?",
					"id": "6e76e9e3-367b-41d0-9d11-b8914930f788",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92My9kYWlseS13b3JzaGlwLXVzZXItc2Vzc2lvbi9jb21wbGV0ZWQiLCJleHAiOjE2OTg4NzA2NDl9.EpxORnsDXzmV15zRx01CjwSTta3L4ja1gGDrj1KbLTY"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": {
							"raw": "https://api.dev.glorify-app.com/api/v3/daily-worship-user-session/completed?start=2023-11-01&end=2023-11-01",
							"protocol": "https",
							"host": [
								"api",
								"dev",
								"glorify-app",
								"com"
							],
							"path": [
								"api",
								"v3",
								"daily-worship-user-session",
								"completed"
							],
							"query": [
								{
									"key": "start",
									"value": "2023-11-01"
								},
								{
									"key": "end",
									"value": "2023-11-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "open Daily worship",
					"id": "487175ab-c76b-41fc-94c1-b24c6349e46a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92My9kYWlseS13b3JzaGlwLXVzZXItc2Vzc2lvbi82NTQyYjRjNTY3ZDc4ODNjMDZmMTAzZDQiLCJleHAiOjE2OTg4NzQ0MTd9._Svs6xI3YuDB8JskC6gTX8YfMy4Ftl3a2oz9bfhBwuM"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"habits\":[{\"_id\":\"152\",\"type\":\"dailyWalkWithGod\",\"isCompleted\":false},{\"_id\":\"passage:653940a8678885996ab96d69\",\"type\":\"passage\",\"isCompleted\":false},{\"_id\":\"devotional:653940a8678885996ab96d69\",\"type\":\"devotional\",\"isCompleted\":false},{\"_id\":\"653940a8678885996ab96d63\",\"type\":\"dailyQuote\",\"isCompleted\":true}],\"localDate\":\"2023-11-01\"}"
						},
						"url": "https://api.dev.glorify-app.com/api/v3/daily-worship-user-session/6542b4c567d7883c06f103d4"
					},
					"response": []
				},
				{
					"name": "https://api.dev.glorify-app.com/api/v3/daily-worship-user-session/completed?start=2023-11-01&end=2023-11-05",
					"id": "03edc470-7c0f-40bd-b6e5-5db3e33ff027",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92My9kYWlseS13b3JzaGlwLXVzZXItc2Vzc2lvbi9jb21wbGV0ZWQiLCJleHAiOjE2OTg4NzQ0MTh9.wFrRjt9RuCY5sqvK-PNfXf9vPul3yoe9ptqsxlQ4ZkI"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": {
							"raw": "https://api.dev.glorify-app.com/api/v3/daily-worship-user-session/completed?start=2023-11-01&end=2023-11-05",
							"protocol": "https",
							"host": [
								"api",
								"dev",
								"glorify-app",
								"com"
							],
							"path": [
								"api",
								"v3",
								"daily-worship-user-session",
								"completed"
							],
							"query": [
								{
									"key": "start",
									"value": "2023-11-01"
								},
								{
									"key": "end",
									"value": "2023-11-05"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Daily worship user session",
					"id": "565e717d-84e0-4a39-add4-db29bee79b02",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92My9kYWlseS13b3JzaGlwLXVzZXItc2Vzc2lvbiIsImV4cCI6MTY5ODg3MDY0OX0.ZK3K1c2-KazkCtdp59Me6y4tokVq85zanXLwaOwdmqc"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"date\":\"2023-11-01\",\"lang\":\"en\"}"
						},
						"url": "https://api.dev.glorify-app.com/api/v3/daily-worship-user-session"
					},
					"response": []
				},
				{
					"name": "Daily Worship Info",
					"id": "7a42aad3-d1a7-4bf6-902d-3450c56b38fb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92My9kYWlseS13b3JzaGlwL2RhaWx5LXdvcnNoaXAtaW5mbyIsImV4cCI6MTY5ODg3MDY0OX0.9WTo4Zj-3ztqBfQW5lx2cmgA8DYFDgWZI8GQSBeUyUc"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": {
							"raw": "https://api.dev.glorify-app.com/api/v3/daily-worship/daily-worship-info?date=2023-11-01&lang=en",
							"protocol": "https",
							"host": [
								"api",
								"dev",
								"glorify-app",
								"com"
							],
							"path": [
								"api",
								"v3",
								"daily-worship",
								"daily-worship-info"
							],
							"query": [
								{
									"key": "date",
									"value": "2023-11-01"
								},
								{
									"key": "lang",
									"value": "en"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Tree Stats",
					"id": "4084f82b-96a4-4ade-accd-25cfeebdd010",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92My9kYWlseS13b3JzaGlwL3RyZWUtc3RhdHMiLCJleHAiOjE2OTg4NzA2Mzh9.9_OSCBRZu0-nugO_0wIJws1oro3bj9cVtR_xN8VIIwM"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": {
							"raw": "https://api.dev.glorify-app.com/api/v3/daily-worship/tree-stats?date=2023-11-01&localDate=2023-11-01&includeAllStats=false",
							"protocol": "https",
							"host": [
								"api",
								"dev",
								"glorify-app",
								"com"
							],
							"path": [
								"api",
								"v3",
								"daily-worship",
								"tree-stats"
							],
							"query": [
								{
									"key": "date",
									"value": "2023-11-01"
								},
								{
									"key": "localDate",
									"value": "2023-11-01"
								},
								{
									"key": "includeAllStats",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c48d948-9233-49f8-8922-289c9c1844fe",
								"exec": [
									"",
									"",
									"pm.test(\"Verify what user is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"   let user_id = pm.environment.get(\"current_user_id\");",
									"    pm.expect(jsonData.userDailySessions._id).to.eql(user_id)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ef564ad5-b8c1-4bbe-a4fe-2001b52452c4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzOSIsInNlc3Npb25JZCI6IjY1NDJiNDhlMjAwOWJmMGQxNTBmMGUzYiIsInYiOjIsImlhdCI6MTY5ODg3MDQxNH0.yVNMEwnziVaiynWyJKTr6_luUPK-RqGvXyD0AqdPgVk"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92My9kYWlseS13b3JzaGlwLXVzZXItc2Vzc2lvbi91c2VyL3N0YXRzIiwiZXhwIjoxNjk4ODcwNjUwfQ.GzKE4HduV9iU-rUrhy9uGVO48PTXm34TSzT_oDw15jk"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": {
							"raw": "https://api.dev.glorify-app.com/api/v3/daily-worship-user-session/user/stats?start=2023-10-30&end=2023-11-05&localDate=2023-11-01",
							"protocol": "https",
							"host": [
								"api",
								"dev",
								"glorify-app",
								"com"
							],
							"path": [
								"api",
								"v3",
								"daily-worship-user-session",
								"user",
								"stats"
							],
							"query": [
								{
									"key": "start",
									"value": "2023-10-30"
								},
								{
									"key": "end",
									"value": "2023-11-05"
								},
								{
									"key": "localDate",
									"value": "2023-11-01"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "c2deb997-eae5-4994-a608-2b94b4e3bae7"
		},
		{
			"name": "iOS Happy Path",
			"item": [],
			"id": "919019d3-2651-4c9c-91af-eda9e2fc58bc"
		},
		{
			"name": "sequence",
			"item": [
				{
					"name": "https://api.dev.glorify-app.com/api/v2/users/register",
					"id": "ba55fbae-14c2-46cb-b649-f6c605957d61",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi91c2Vycy9yZWdpc3RlciIsImV4cCI6MTY5ODg3ODQwNn0.S8NT_cfxBz-Qf3YvBFIskq9kD2dMbPPwxuVzaKs1nEM"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"fg@gh.com\",\"password\":\"Green1111!\",\"nickname\":\"O\",\"localDate\":\"2023-11-01T15:37:06.04Z\",\"appstoreLocation\":\"USA\"}"
						},
						"url": "https://api.dev.glorify-app.com/api/v2/users/register"
					},
					"response": []
				},
				{
					"name": "https://api.dev.glorify-app.com/api/v2/personalisation/survey/onboarding",
					"id": "68a372c1-cbcc-4198-af80-836071ab6c24",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "api.dev.glorify-app.com"
							},
							{
								"key": "authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NDJkMzEyNzUyNjc0MWFmNDE0YzA4OSIsInNlc3Npb25JZCI6IjY1NDJkMzEyNzUyNjc0MWFmNDE0YzA4YiIsInYiOjIsImlhdCI6MTY5ODg3ODIyNn0.TNM4acgvcx7E99q8EGtdQUICEtP7uGaO2H8I-k3WCcQ"
							},
							{
								"key": "hash",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJwYXRoIjoiL2FwaS92Mi9wZXJzb25hbGlzYXRpb24vc3VydmV5L29uYm9hcmRpbmciLCJleHAiOjE2OTg4Nzg0MDh9.s1fV4Sd753MtZoIShodGDyAVqvxkr1LIAGJqu1edFss"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "accept-language",
								"value": "en"
							},
							{
								"key": "app-agent",
								"value": "android 13 glorify/2.44.0"
							},
							{
								"key": "timezone",
								"value": "-07:00"
							},
							{
								"key": "user-agent",
								"value": "okhttp/5.0.0-alpha.10"
							}
						],
						"url": "https://api.dev.glorify-app.com/api/v2/personalisation/survey/onboarding"
					},
					"response": []
				}
			],
			"id": "668a14d3-9379-4cf4-869c-99c4c8958d55"
		}
	]
}